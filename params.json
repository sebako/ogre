{"name":"Ogre","tagline":"OGRE: OpenGrok Retrieval Engine","body":"OGRE - OpenGrok Retrieval Engine\r\n================================\r\n\r\nOGRE is a Java library that allows programmatic access to [OpenGrok][1] servers.\r\nSince OpenGrok provides no web service API in the strict sense - it ouputs XHTML,\r\nand the project maintains that the format will not change or change infrequently -\r\nthis is effectively done by \"web scraping\", i.e. parsing the HTML output returned\r\nby the OpenGrok web server. The results are wrapped in Java objects and delivered\r\nto the caller.\r\n\r\n[1]: http://hub.opensolaris.org/bin/view/Project+opengrok/\r\n\r\n\r\nLibrary usage\r\n-------------\r\n\r\n**Notice:** This library can put a high, atypical load on servers that might be\r\ndimensioned for human readers browsing only a small part of the results. Certain\r\nmeasures are provided to reduce server load or allow servers to react\r\nappropriately, namely:\r\n\r\n *  The number of result pages that are browsed can be limited;\r\n *  Pages providing more line matches than shown on the result pages are\r\n    also visited by default, but this can be switched off;\r\n *  The library sets a custom User-Agent header when contacting HTTP servers.\r\n\r\nNonetheless, users are *strongly discouraged* from accessing a site with this\r\nlibrary without the consent of the administrator.\r\n\r\n\r\n### Basic search\r\n\r\nThe central starting point for a search run is the `Scraper` class. Before you\r\ncan start searching, you must know the base URL of the OpenGrok server, that is\r\nto say, the URL that will bring up an empty search form. If a web proxy is\r\nnecessary, proxy hostname and port must also be known.\r\n\r\nWith this information, create a new `Scraper` instance:\r\n\r\n    Scraper scr = new Scraper(baseURL, proxy);\r\n\r\nIf no proxy is necessary, leave it `null`. Now you are ready to start your\r\nsearch. OpenGrok allows for five categories of search entries, plus project\r\nselection, and these are recognisable on most OpenGrok welcome pages as\r\nfive entry fields (the project is usually selected in a list box); however\r\nin OGRE we will usually refer to them by certain shorter informal names:\r\n\r\n 1. Full search (query)\r\n 2. Definition (defs)\r\n 3. Symbol (refs)\r\n 4. File path (path)\r\n 5. History (hist)\r\n 6. Project (project)\r\n\r\nWhen you have these, you start a search by calling the `search()` method\r\nof your scraper instance:\r\n\r\n    List<FileMatch> results = scr.search(quety, defs, refs, path, hist, project);\r\n\r\nOf course the user doesn't have to supply search terms for all of these\r\ncategories; the method accepts that `null` and empty or whitespace-only\r\nstrings, and does not include such data in the query sent to the server.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}